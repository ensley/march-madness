name: test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  CMDSTAN_VERSION: "2.36.0"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install cmdstanpy
      run: |
        python -m pip install --upgrade pip wheel
        pip install cmdstanpy

    - name: Cache Stan installation
      uses: actions/cache@v4
      with:
        path: ~/.cmdstan
        key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN_VERSION }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Install Stan
      if: matrix.os != 'windows-latest'
      run: |
        python -m cmdstanpy.install_cmdstan --version "${{ env.CMDSTAN_VERSION }}" --cores 2

    - name: Install Stan
      if: matrix.os == 'windows-latest'
      run: |
        python -m cmdstanpy.install_cmdstan --compiler --version "${{ env.CMDSTAN_VERSION }}" --cores 2

    - name: Run static analysis
      run: hatch fmt --check

    - name: Run tests
      run: hatch test --python ${{ matrix.python-version }} --cover 
